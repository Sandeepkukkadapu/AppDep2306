[{"/home/brn-infotech/Desktop/appDep/client/src/index.js":"1","/home/brn-infotech/Desktop/appDep/client/src/App.js":"2","/home/brn-infotech/Desktop/appDep/client/src/reportWebVitals.js":"3","/home/brn-infotech/Desktop/appDep/client/src/componts/Login.js":"4","/home/brn-infotech/Desktop/appDep/client/src/componts/Home.js":"5","/home/brn-infotech/Desktop/appDep/client/src/componts/EditProfile.js":"6","/home/brn-infotech/Desktop/appDep/client/src/componts/Signup.js":"7"},{"size":535,"mtime":1696322634922,"results":"8","hashOfConfig":"9"},{"size":594,"mtime":1696843921113,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1696322634922,"results":"11","hashOfConfig":"9"},{"size":3029,"mtime":1697529128220,"results":"12","hashOfConfig":"9"},{"size":1255,"mtime":1697529264291,"results":"13","hashOfConfig":"9"},{"size":2422,"mtime":1697529338076,"results":"14","hashOfConfig":"9"},{"size":2244,"mtime":1697529182270,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"du1z48",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/home/brn-infotech/Desktop/appDep/client/src/index.js",[],[],"/home/brn-infotech/Desktop/appDep/client/src/App.js",[],[],"/home/brn-infotech/Desktop/appDep/client/src/reportWebVitals.js",[],[],"/home/brn-infotech/Desktop/appDep/client/src/componts/Login.js",["41","42"],[],"import React, { useEffect, useRef } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport axios from \"axios\";\n\nfunction Login() {\n\n   \n  \n    let emailInputRef=  useRef();\n    let PasswordInutRef = useRef();\n    let navigate = useNavigate();\n\n    useEffect(()=>{\n      axios.defaults.baseURL = '';\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem(\"token\");\n      emailInputRef.current.value = localStorage.getItem(\"email\");\n   PasswordInutRef.current.value = localStorage.getItem(\"password\");\n  //  validateCredentials();\n    // validateToken();\n    },[])\n  \n\n    let validateCredentials = async()=>{\n\n    \n\n      let dataToSend = new FormData();\n    \n      dataToSend.append(\"email\",emailInputRef.current.value);\n      dataToSend.append(\"password\",PasswordInutRef.current.value);\n\n\n      let reqOptions = {\n        method:\"POST\",\n        body:dataToSend,\n      };\n\n      let JSONData = await fetch(\"/validateLogin\",reqOptions);\n\n      let JSOData =  await JSONData.json();\n\n      \n\n      if(JSOData.status === \"success\"){\n        console.log(JSOData);\n        // localStorage.setItem(\"email\",emailInputRef.current.value);\n        // localStorage.setItem(\"password\",PasswordInutRef.current.value);\n        localStorage.setItem(\"token\",JSOData.token);\n        navigate(\"/home\",{state:JSOData})\n      } else{\n        alert(JSOData.msg)\n      }\n\n     \n\n\n    };\n\n    let validateCredentialsThruAxios = async()=>{\n\n    \n\n      let dataToSend = new FormData();\n    \n      dataToSend.append(\"email\",emailInputRef.current.value);\n      dataToSend.append(\"password\",PasswordInutRef.current.value);\n\n     let responce = await axios.post(\"/validateLogin\",dataToSend)\n   \n     console.log(responce);\n      \n\n      if(responce.data.status === \"success\"){\n        console.log(responce.data);\n        // localStorage.setItem(\"email\",emailInputRef.current.value);\n        // localStorage.setItem(\"password\",PasswordInutRef.current.value);\n        localStorage.setItem(\"token\",responce.data.token);\n        navigate(\"/home\",{state:responce.data})\n      } else{\n        alert(responce.data.msg)\n      }\n\n     };\n\n    let validateToken =async()=>{\n      let dataToSend = new FormData();\n      dataToSend.append(\"token\",localStorage.getItem(\"token\"))\n\n      let reqOptions ={\n        method:\"POST\",\n        body:dataToSend\n      }\n\n      let JSONData = await fetch(\"/validateToken\",reqOptions);\n\n      let JSOData =await JSONData.json();\n\n      console.log(JSOData);\n\n    }\n\n  return (\n    <div className='App'>\n   <form>\n    <div><h1>login</h1></div>\n\n    <div>\n        <label>Email:-</label>\n        <input ref={emailInputRef}></input>\n    </div>\n    <div>\n        <label>Password:-</label>\n        <input ref={PasswordInutRef}></input>\n    </div>\n   \n  \n\n    <div>\n       <button type='button' onClick={()=>{\n    //  validateCredentials();\n    validateCredentialsThruAxios();\n       }}>login</button>\n    </div>\n\n   </form>\n   <Link to=\"/signup\">Signup</Link>\n    </div>\n  )\n}\n\nexport default Login","/home/brn-infotech/Desktop/appDep/client/src/componts/Home.js",["43","44"],[],"import React from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Link } from 'react-router-dom';\n\n\nfunction Home() {\n    let loc = useLocation();\n    let navigate = useNavigate();\n    console.log(loc);\n\n    let deleteAccount  = async()=>{\n  \n     let dataToSend = new FormData();\n     dataToSend.append(\"email\",loc.state.data.email);\n\n      let reqOptions = {\n        method:\"DELETE\",\n        body:dataToSend\n      };\n\n     let JSONData = await fetch(\"/deleteUser\",reqOptions);\n\n     let JSOData = await JSONData.json();\n     if(JSOData.status == \"success\"){\n      localStorage.clear();\n      alert(JSOData.msg)\n      navigate(\"/\")\n     }else{\n      alert(\"some Technical Error,unable to delete\");\n     }\n\n    }\n  return (\n    <div>\n\n    <Link to = \"/\">LogOut</Link>\n\n        <button \n        onClick={()=>{\n           navigate(\"/EditProfile\",{state:loc.state.data });\n        }}\n        > Edit Profile</button>\n        <br></br>\n        <br></br>\n        <button onClick={()=>{\n          deleteAccount();\n        }}>Delete Account</button>\n\n        <h1>{loc.state.data.firstName}{loc.state.data.lastName} </h1>\n        <img src={`${loc.state.data.profilePic}`}></img>\n        \n        \n\n    </div>\n  )\n}\n\nexport default Home","/home/brn-infotech/Desktop/appDep/client/src/componts/EditProfile.js",["45","46"],[],"import React, { useEffect, useRef, useState } from 'react'\nimport {  Link ,useLocation } from 'react-router-dom';\n\nfunction EditProfile() {\n\n    let firstNameInputRef = useRef();\n    let lastNameInputRef = useRef();\n    let PasswordInutRef = useRef();\n    let profilePicInputRef = useRef();\n    let [profilePic,setProfilePic] = useState(\"./images/profilepic.jpeg\");\n    let loc = useLocation();\n    console.log(loc);\n    console.log(\"inside edit profile\")\n    \n\n\n    useEffect(()=>{\n    \n        firstNameInputRef.current.value = loc.state.firstName;\n        lastNameInputRef.current.value = loc.state.lastName;\n       PasswordInutRef.current.value = loc.state.password;\n    \n\n    },[]);\n    \n\n  \n\n    let sendUpdatedDataToServer = async()=>{\n     let dataToSend = new FormData();\n      dataToSend.append(\"fn\",firstNameInputRef.current.value);\n      dataToSend.append(\"ln\",lastNameInputRef.current.value);\n      dataToSend.append(\"email\",loc.state.email);\n      dataToSend.append(\"password\",PasswordInutRef.current.value);\n            \n      for(let i=0;i<profilePicInputRef.current.files.length;i++){\n        dataToSend.append(\"profilePic\",profilePicInputRef.current.files[i]);\n      }\nlet reqOptions = {\n        method:\"PATCH\",\n        body:dataToSend,\n      };\n\nlet JSONData = await fetch (\"/updateDetails\",reqOptions);\n\nlet JSOData = await JSONData.json();\n\nalert(JSOData.msg);\nconsole.log(JSOData);\n    };\n  return (\n    <div className='App'>\n   <form>\n    <div><h1>EditProfile</h1></div>\n\n    <div>\n        <label>Profile Pic:-</label>\n        <input ref={profilePicInputRef} type='file'\n        onChange={()=>{\n         let selectedFileURL = URL.createObjectURL\n         (profilePicInputRef.current.files[0])\n         setProfilePic(selectedFileURL);\n\n        }}\n        ></input>\n    </div>\n    <div>\n      <img className='profilepicpreview' src ={profilePic}></img>\n    </div>\n    <div>\n        <label>First Name:-</label>\n        <input ref={firstNameInputRef}></input>\n    </div>\n    <div>\n        <label>Last Name:-</label>\n        <input ref={lastNameInputRef}></input>\n    </div>\n    <div>\n        <label>Password:-</label>\n        <input ref={PasswordInutRef}></input>\n    </div>\n   \n    \n    \n\n    <div>\n       <button type='button' onClick={()=>{\n        sendUpdatedDataToServer();\n       }}>Update</button>\n    </div>\n\n   </form>\n   <Link to = \"/\">Login</Link>\n    </div>\n  )\n}\n\nexport default EditProfile","/home/brn-infotech/Desktop/appDep/client/src/componts/Signup.js",["47"],[],"import React, { useRef, useState } from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction Signup() {\n\n    let firstNameInputRef = useRef();\n    let lastNameInputRef = useRef();\n    let emailInputRef=  useRef();\n    let PasswordInutRef = useRef();\n    let profilePicInputRef = useRef();\n    let [profilePic,setProfilePic] = useState(\"./images/profilepic.jpeg\");\n    \n\n\n\n  \n\n    let sendSignupDataToServerFormData = async()=>{\n\n    \n\n      let dataToSend = new FormData();\n      dataToSend.append(\"fn\",firstNameInputRef.current.value);\n      dataToSend.append(\"ln\",lastNameInputRef.current.value);\n      dataToSend.append(\"email\",emailInputRef.current.value);\n      dataToSend.append(\"password\",PasswordInutRef.current.value);\n\n      \n      \n      for(let i=0;i<profilePicInputRef.current.files.length;i++)\n      {\n        dataToSend.append(\"profilePic\",profilePicInputRef.current.files[i]);\n      }\n\n      let reqOptions = {\n        method:\"POST\",\n        body:dataToSend,\n      };\n\n      let JSONData = await fetch(\"/signup\",reqOptions);\n\n      let JSOData =  await JSONData.json();\n\n      console.log(JSOData);\n\n\n    };\n\n\n  return (\n    <div className='App'>\n   <form>\n    <div><h1>Signup</h1></div>\n\n    <div>\n        <label>Profile Pic:-</label>\n        <input ref={profilePicInputRef} type='file'\n        onChange={()=>{\n         let selectedFileURL = URL.createObjectURL\n         (profilePicInputRef.current.files[0])\n         setProfilePic(selectedFileURL);\n\n        }}\n        ></input>\n    </div>\n    <div>\n      <img className='profilepicpreview' src ={profilePic}></img>\n    </div>\n    <div>\n        <label>First Name:-</label>\n        <input ref={firstNameInputRef}></input>\n    </div>\n    <div>\n        <label>Last Name:-</label>\n        <input ref={lastNameInputRef}></input>\n    </div>\n    <div>\n        <label>Email:-</label>\n        <input ref={emailInputRef}></input>\n    </div>\n    <div>\n        <label>Password:-</label>\n        <input ref={PasswordInutRef}></input>\n    </div>\n   \n    \n    \n\n    <div>\n       <button type='button' onClick={()=>{\n     sendSignupDataToServerFormData();\n       }}>Signup(Form Data)</button>\n    </div>\n\n   </form>\n   <Link to = \"/\">Login</Link>\n    </div>\n  )\n}\n\nexport default Signup",{"ruleId":"48","severity":1,"message":"49","line":24,"column":9,"nodeType":"50","messageId":"51","endLine":24,"endColumn":28},{"ruleId":"48","severity":1,"message":"52","line":86,"column":9,"nodeType":"50","messageId":"51","endLine":86,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":24,"column":24,"nodeType":"55","messageId":"56","endLine":24,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":50,"column":9,"nodeType":"59","endLine":50,"endColumn":51},{"ruleId":"60","severity":1,"message":"61","line":24,"column":7,"nodeType":"62","endLine":24,"endColumn":9,"suggestions":"63"},{"ruleId":"57","severity":1,"message":"58","line":68,"column":7,"nodeType":"59","endLine":68,"endColumn":60},{"ruleId":"57","severity":1,"message":"58","line":67,"column":7,"nodeType":"59","endLine":67,"endColumn":60},"no-unused-vars","'validateCredentials' is assigned a value but never used.","Identifier","unusedVar","'validateToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loc.state.firstName', 'loc.state.lastName', and 'loc.state.password'. Either include them or remove the dependency array.","ArrayExpression",["64"],{"desc":"65","fix":"66"},"Update the dependencies array to be: [loc.state.firstName, loc.state.lastName, loc.state.password]",{"range":"67","text":"68"},[683,685],"[loc.state.firstName, loc.state.lastName, loc.state.password]"]